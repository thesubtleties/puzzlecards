{"version":3,"sources":["Components/Topbar.js","Components/OneCard.js","Components/CardArea.js","App.js","index.js"],"names":["Topbar","props","className","currentScore","highScore","OneCard","singleUrl","imageUrl","onClick","clickHandler","style","order","placementOrder","id","src","process","alt","name","CardArea","cardsInOrder","carDetails","map","card","img","newPlacementOrder","App","useState","setCurrentScore","setHighScore","pickOrder","setPickOrder","setPlacementOrder","max","placeArray","length","randomNumber","Math","floor","random","includes","push","addToPickOrder","carPicked","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5768c548.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\n\nfunction Topbar(props) {\n  return (\n    <div className=\"Topbar\">\n    <span>Memory Card Game</span>\n    <div className=\"scores\">Score:{props.currentScore}</div>\n    <div className=\"scores\">High Score:{props.highScore}</div>\n\n    </div>\n  );\n}\n\nexport default Topbar;\n","import React, { useState, useEffect } from 'react';\n\n\n\nfunction OneCard(props) {\n  const singleUrl = \"./images/\" + props.imageUrl;\n  return (\n    <div className=\"Card\" onClick={() => { return props.clickHandler(props) }} style={{order:props.placementOrder[props.id - 1]}} >\n      <img className=\"carImage\" src={process.env.PUBLIC_URL + singleUrl} alt=\"test\" />\n      <div className=\"carName\">{props.name}</div>\n      <div className=\"carName\"></div>\n      \n    </div>\n  );\n}\n\nexport default OneCard;\n","import React, { useState, useEffect } from 'react';\nimport OneCard from './OneCard';\n\n\nfunction CardArea(props) {\n  const cardsInOrder = props.carDetails.map((card) => <OneCard key={card.id} id={card.id} name={card.name} imageUrl={card.img} newPlacementOrder={props.newPlacementOrder} placementOrder={props.placementOrder} clickHandler={props.clickHandler}  />)\n\n  return (\n    <div className=\"cardArea\">\n    {cardsInOrder}\n    </div>\n  );\n}\n\nexport default CardArea;\n","import React, { useState, useEffect } from 'react';\nimport Topbar from './Components/Topbar';\nimport CardArea from './Components/CardArea';\nimport './App.css';\n\n\nfunction App() {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n  const [pickOrder, setPickOrder] = useState([]);\n  \n\n  const carDetails = [\n    {\n      name: \"Audi R8\",\n      img: \"r8.jpg\",\n      id: \"1\",\n    },\n    {\n      name: \"Chevrolet Corvette\",\n      img: \"corvette.jpg\",\n      id: \"2\",\n    },\n    {\n      name: \"Porsche Boxster\",\n      img: \"boxster.jpg\",\n      id: \"3\",\n    },\n    {\n      name: \"Porsche 911\",\n      img: \"911.jpg\",\n      id: \"4\",\n    },\n    {\n      name: \"Nissan GT-R\",\n      img: \"gtr.jpg\",\n      id: \"5\",\n    },\n    {\n      name: \"Jaguar F-Type\",\n      img: \"jaguarftype.jpg\",\n      id: \"6\",\n    },\n    {\n      name: \"Mercedes GT\",\n      img: \"mercedesgt.jpg\",\n      id: \"7\",\n    },\n    {\n      name: \"Mercedes SL Class\",\n      img: \"mercedessl.jpg\",\n      id: \"8\",\n    },\n    {\n      name: \"Toyota Supra\",\n      img: \"supra.jpg\",\n      id: \"9\",\n    },\n    {\n      name: \"Lexus LC\",\n      img: \"lexuslc.jpg\",\n      id: \"10\",\n    },\n    {\n      name: \"Acura NSX\",\n      img: \"nsx.jpg\",\n      id: \"11\",\n    },\n    {\n      name: \"Porsche Cayman\",\n      img: \"cayman.jpg\",\n      id: \"12\",\n    }\n  ]\n  const [placementOrder, setPlacementOrder] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]);\n\n  const getRandomInt = (max) => {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  const newPlacementOrder = () => {\n    const placeArray = []\n    while (placeArray.length < 12) {\n      const randomNumber = getRandomInt(12);\n      if (!placeArray.includes(randomNumber)) {\n        placeArray.push(randomNumber);\n  \n      }\n    }\n    setPlacementOrder(placeArray);\n    \n  }\n  const resetPickOrder = () => {\n    setPickOrder([]);\n  }\n\n  const addToPickOrder = (props) => {\n    const carPicked = props.id;\n    if (pickOrder.includes(carPicked)) {\n      resetPickOrder();\n      setCurrentScore(0);\n    } else {\n      pickOrder.push(carPicked);\n      setCurrentScore(currentScore + 1);\n      if (currentScore >= highScore) {\n        setHighScore(highScore + 1);\n      }\n    }\n\n  }\n  const clickHandler = (props) => {\n    addToPickOrder(props);\n    newPlacementOrder();\n    console.log(props.id)\n    console.log(pickOrder)\n    \n  }\n\n\n  return (\n    <div className=\"App\">\n    <Topbar currentScore={currentScore} highScore={highScore} />\n    <CardArea carDetails={carDetails} placementOrder={placementOrder} newPlacementOrder={newPlacementOrder} addToPickOrder={addToPickOrder} clickHandler={clickHandler} />\n    \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}